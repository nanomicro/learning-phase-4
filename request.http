@baseUrl = http://localhost:3000/api

###

GET {{baseUrl}}/pets HTTP/1.1
Content-Type: application/json

### search pets by name
GET {{baseUrl}}/pets?name=ATTO HTTP/1.1
Content-Type: application/json


###

GET {{baseUrl}}/pets/1 HTTP/1.1
Content-Type: application/json

###

POST {{baseUrl}}/pets HTTP/1.1
Content-Type: application/json

{
  "pet": {
    "name": "Fido",
    "imageUrl": "https://cdn2.thecatapi.com/images/xBR2jSIG7.jpg",
    "birthDate": "2020-01-01T00:00:00.000Z",
    "gender": "Female",
    "ownerId": 1
  }
}
###

PUT {{baseUrl}}/pets HTTP/1.1
Content-Type: application/json

{
  "pet": {
    "gender": "Female"
  }
}

###

DELETE {{baseUrl}}/pets HTTP/1.1
Content-Type: application/json

// DELETE /api/pets/:id
export async function DELETE(request: Request, { params }: { params: { id: string } }) {
  // get id from params
  const id = params.id
  // delete pet record
  const pet = await prisma.pet.delete({
    // where id is equal to the id param
    where: { id: Number(id) },
  })
  return NextResponse.json({ id: id })
}

###

DELETE {{baseUrl}}/pets/2 HTTP/1.1
Content-Type: application/json


###

POST {{baseUrl}}/pets/1/weights HTTP/1.1
Content-Type: application/json

{
  "weight": {
    "weight": 10.0,
    "petId": 4
  }
}

### signup
POST {{baseUrl}}/signup HTTP/1.1
Content-Type: application/json

{
  "email": "10.nano.9.kojima@gmail.com",
  "password": "-NNkX5L%AwDts2W"
}

### signin
POST {{baseUrl}}/signin HTTP/1.1
Content-Type: application/json

{
  "email": "10.nano.9.kojima@gmail.com",
  "password": "-NNkX5L%AwDts2W"
}

### upload image
POST {{baseUrl}}/images HTTP/1.1
Content-Type: multipart/form-data; boundary=MyBoundary

--MyBoundary
Content-Disposition: form-data; name="file"; filename="alpaca.JPG"
Content-Type: image/jpeg

< images/alpaca.JPG
--MyBoundary--
